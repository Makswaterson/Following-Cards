{"version":3,"file":"static/js/448.ff833b33.chunk.js","mappings":"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","sources":["services/GetCards.jsx","pages/Tweets.styled.jsx","components/CardsItem/CardsItem.styled.jsx","components/CardsList/CardsList.styled.jsx","components/CardsItem/CardsItem.jsx","components/CardsList/CardsList.jsx","pages/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://6445574ab80f57f581b7e6e9.mockapi.io';\n\nexport async function getAllCards() {\n  try {\n    const { data } = await axios.get(`/tweets`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport async function getPage(page) {\n  try {\n    const { data } = await axios.get(`/tweets?page=${page}&limit=3`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nexport async function updateTweet(id, activeFollow, followers) {\n  try {\n    const { data } = await axios.put(`/tweets/${id}`, {\n      following: activeFollow,\n      followers,\n    });\n    console.log(data);\n    return data;\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  font-size: 600;\n  color: black;\n  text-decoration: none;\n\n  :hover {\n    color: orangered;\n    background: gray;\n    opacity: 0.7;\n  }\n  &.active {\n    color: orangered;\n    border: 1px solid red;\n  }\n`;\n","import styled from 'styled-components';\nimport picture from '../CardsItem/images/picture.png';\nimport rectangle from '../CardsItem/images/rectangle.png';\nimport boy from '../CardsItem/images/boy.png';\n\nexport const Btn = styled.button`\n  background: #ebd8ff;\n  margin-top: 25px;\n  padding: 14px 28px;\n  gap: 6px;\n  width: 196px;\n  height: 50px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms scale 1;\n  text-decoration: none;\n  &:hover {\n    background-color: #ae84de;\n    transform: scale(1.1);\n  }\n`;\nexport const ContainerList = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-top: 28px;\n  padding-bottom: 28px;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n\n  gap: 50px;\n`;\nexport const Picture = styled.div`\n  width: 308px;\n  height: 168px;\n  background-image: url(${picture});\n`;\nexport const Rectangle = styled.div`\n  width: 100%;\n  height: 8px;\n  background-image: url(${rectangle});\n`;\nexport const Boy = styled.div`\n  position: absolute;\n  top: 190px;\n  left: 140px;\n  width: 83px;\n  height: 80px;\n  padding: 0px;\n  background-image: url(${boy});\n  padding: 7px 1px 2px 11px;\n  border-radius: 85.9232px;\n  overflow: hidden;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  margin-top: 25px;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const CardText = styled.section`\n  width: fit-content;\n  height: 24px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  color: #ebd8ff;\n`;\nexport const FollowingBtn = styled.button`\n  margin-top: 25px;\n  padding: 14px 28px;\n  gap: 6px;\n  width: 196px;\n  height: 50px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n\n  color: #373737;\n  background: #5cd3a8;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms scale 1;\n  &:hover {\n    background-color: #ae84de;\n    scale: 1.1;\n  }\n`;\nexport const AvatarUser = styled.img`\n  width: 80%;\n  height: 80%;\n  object-fit: cover;\n  border-radius: 60%;\n`;\nexport const BtnFunc = styled.button`\n  display: block;\n  margin: 25px auto;\n  background: #ebd8ff;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  padding: 14px 28px;\n  gap: 6px;\n  width: 196px;\n  height: 50px;\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms scale 1;\n  text-decoration: none;\n  &:hover {\n    background-color: #ae84de;\n    transform: scale(1.1);\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0;\n  list-style: none;\n`;\nexport const Links = styled(Link)`\n  margin-bottom: 50px;\n  text-decoration: none;\n  :hover {\n    box-shadow: 42.5777px 46.87386px 40.6216px rgba(35, 5, 132, 0.23);\n  }\n`;\n","import { useState } from 'react';\nimport { updateTweet } from 'services/GetCards';\nimport {\n  Btn,\n  FollowingBtn,\n  ContainerList,\n  Picture,\n  Rectangle,\n  Boy,\n  TextContainer,\n  CardText,\n  AvatarUser,\n} from './CardsItem.styled';\n\nconst CardInfo = ({ card }) => {\n  const [active, setActive] = useState(card.following);\n\n  const formatFollowers = (followers, tweets) =>\n    new Intl.NumberFormat('en-US').format(card.followers, card.tweets);\n\n  let falseFollow = !active;\n  const activeToggleBtn = async () => {\n    if (active) {\n      card.followers += 1;\n    } else {\n      card.followers -= 1;\n    }\n    await updateTweet(card.id, falseFollow, card.followers).then(\n      setActive(!active)\n    );\n  };\n\n  return (\n    <div>\n      <ContainerList>\n        <Picture></Picture>\n        <Rectangle></Rectangle>\n        <Boy>\n          <AvatarUser src={card.avatar} alt=\"photos\" />\n        </Boy>\n        <TextContainer>\n          <CardText>{formatFollowers()} Tweets</CardText>\n          <CardText>{formatFollowers()} Followers</CardText>\n        </TextContainer>\n        {active ? (\n          <Btn type=\"button\" onClick={activeToggleBtn}>\n            Follow\n          </Btn>\n        ) : (\n          <FollowingBtn type=\"button\" onClick={activeToggleBtn}>\n            Following\n          </FollowingBtn>\n        )}\n      </ContainerList>\n    </div>\n  );\n};\nexport default CardInfo;\n","import { List, Links } from './CardsList.styled';\nimport CardInfo from '../CardsItem/CardsItem';\n\nexport const CardList = ({ cards }) => {\n  return (\n    <List>\n      {cards.map(card => (\n        <Links key={card.id}>\n          <CardInfo card={card} />\n        </Links>\n      ))}\n    </List>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { getPage } from '../services/GetCards';\nimport { Links } from './Tweets.styled';\nimport { BtnFunc } from '../components/CardsItem/CardsItem.styled';\nimport { CardList } from '../components/CardsList/CardsList';\n\nconst Cards = () => {\n  const [cards, setCards] = useState([]);\n  const [page, setPage] = useState(1);\n  const location = useLocation();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showBtn, setshowBtn] = useState(false);\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  // const fetchAllTweets = ()=>{}\n\n  useEffect(() => {\n    setLoading(true);\n    const allTweetsFetch = async () => {\n      try {\n        const data = await getPage(page);\n        if (cards === []) {\n          setCards(data);\n        } else {\n          setCards([...cards, ...data]);\n        }\n        setshowBtn(page < Math.ceil(12 / 3));\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    allTweetsFetch();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setPage, page]);\n\n  const onLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <section>\n      {loading && <Loader />}\n      {error && <p>Sorry,there is no cards...</p>}\n      <Links to={backLinkLocationRef.current}>\n        <BtnFunc type=\"button\">Return back</BtnFunc>\n      </Links>\n      <CardList cards={cards} />\n      {loading ? (\n        <Loader />\n      ) : (\n        showBtn && (\n          <BtnFunc type=\"button\" onClick={onLoadMore}>\n            Load more\n          </BtnFunc>\n        )\n      )}\n    </section>\n  );\n};\n\nexport default Cards;\n"],"names":["getPage","page","axios","data","console","log","message","updateTweet","id","activeFollow","followers","following","Links","styled","Link","Btn","ContainerList","Picture","picture","Rectangle","Boy","boy","TextContainer","CardText","FollowingBtn","AvatarUser","BtnFunc","List","card","useState","active","setActive","formatFollowers","tweets","Intl","NumberFormat","format","falseFollow","activeToggleBtn","then","src","avatar","alt","type","onClick","CardList","cards","map","setCards","setPage","location","useLocation","error","setError","loading","setLoading","showBtn","setshowBtn","backLinkLocationRef","useRef","state","from","useEffect","allTweetsFetch","Math","ceil","Loader","to","current"],"sourceRoot":""}